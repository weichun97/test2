package com.github.weichun97.cxf;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.5.6
 * 2023-11-10T10:26:20.635+08:00
 * Generated source version: 3.5.6
 *
 */
@WebServiceClient(name = "MyHelloWorldService",
                  wsdlLocation = "file:/D:/work/study/java/test2/webservice-test/src/main/resources/HelloWorldService.wsdl",
                  targetNamespace = "http://cxf.tg.com/")
public class MyHelloWorldService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://cxf.tg.com/", "MyHelloWorldService");
    public final static QName HelloWorldServicePort = new QName("http://cxf.tg.com/", "HelloWorldServicePort");
    static {
        URL url = null;
        try {
            url = new URL("file:/D:/work/study/java/test2/webservice-test/src/main/resources/HelloWorldService.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(MyHelloWorldService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/D:/work/study/java/test2/webservice-test/src/main/resources/HelloWorldService.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public MyHelloWorldService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public MyHelloWorldService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public MyHelloWorldService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public MyHelloWorldService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public MyHelloWorldService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public MyHelloWorldService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns HelloWorldService
     */
    @WebEndpoint(name = "HelloWorldServicePort")
    public HelloWorldService getHelloWorldServicePort() {
        return super.getPort(HelloWorldServicePort, HelloWorldService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns HelloWorldService
     */
    @WebEndpoint(name = "HelloWorldServicePort")
    public HelloWorldService getHelloWorldServicePort(WebServiceFeature... features) {
        return super.getPort(HelloWorldServicePort, HelloWorldService.class, features);
    }

}
